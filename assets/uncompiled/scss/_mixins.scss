// * breakpoints
$grid-xs: 0px;
$grid-sm: 576px;
$grid-md: 768px;
$grid-lg: 992px;
$grid-xl: 1200px;
$grid-2xl: 1400px;


// * basic transition rule
@mixin transition-basic() {
	transition: all 0.4s cubic-bezier(0.77, 0, 0.175, 1);
}

// * form placeholder color
// * @param {string} $color
@mixin placeholderColor($color) { // use within form class
	::-webkit-input-placeholder { /* Chrome/Opera/Safari */
		color: $color;
	}
	::-moz-placeholder { /* Firefox 19+ */
		color: $color;
	}
	:-ms-input-placeholder { /* IE 10+ */
		color: $color;
	}
	:-moz-placeholder { /* Firefox 18- */
		color: $color;
	}
}

// * Helper for button hovers
// * @param {string} $bg
// * @param {string} $color
@mixin btnHover($bg: "black", $color: "white") {
	&:hover,
	&:focus,
	&:target,
	&:active {
		background: $bg;
		color: $color;
		border-color: $bg;
	}
}

// * Helper for cover background-image
// * @param {string} $url Relative path from img folder
// * @param {int} $opacity Optional. Specify amount from 0 to 1 for black overlay.
// * @params {string/int} $xpos $ypos Optional. Specify image positioning
@mixin bg-cover($url: "", $opacity: 0, $xpos: 50%, $ypos: 50%) {
	background-image: url("../img/#{$url}");
	background-size: cover;
	background-position: $xpos $ypos;
	background-repeat: no-repeat;

	@if $opacity > 0 {
		position: relative;
		z-index: 1;

		&::before {
			content: "";
			width: 100%;
			height: 100%;
			position: absolute;
			top: 0;
			left: 0;
			background: rgba(black, $opacity);
			z-index: -1;
		}
	}
}
